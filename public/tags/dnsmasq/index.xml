<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dnsmasq on Bryan Konowitz</title>
    <link>http://localhost:1313/tags/dnsmasq/</link>
    <description>Recent content in Dnsmasq on Bryan Konowitz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Tue, 02 Jun 2015 21:38:15 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dnsmasq/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>prodlike-dev-flow part 1 - dnsmasq</title>
      <link>http://localhost:1313/post/dnsmasq/</link>
      <pubDate>Tue, 02 Jun 2015 21:38:15 -0700</pubDate>
      
      <guid>http://localhost:1313/post/dnsmasq/</guid>
      <description>

&lt;h3 id=&#34;why-and-whats-it-buy-you:dc0fd55d5e6d99f1b0154c995452f3bf&#34;&gt;Why and whats it buy you&lt;/h3&gt;

&lt;p&gt;dnsmasq is one part of the equation to making our development enviroments behave like a production environment.  Instead of coding in URLs like &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt; we want to provide &lt;a href=&#34;http://testing.coolwebsite.dev/&#34;&gt;http://testing.coolwebsite.dev/&lt;/a&gt;.  This way if we have websites hosted on subdomains or path extension mounts we can browse and function locally the same as you will with a production environment.  This post solves the DNS problem associated with this flow.  In order to completely get the dev-prod parity additional tools will be necessary, such as load balancers.&lt;/p&gt;

&lt;h3 id=&#34;the-setup:dc0fd55d5e6d99f1b0154c995452f3bf&#34;&gt;The Setup&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; brew install dnsmasq
$&amp;gt; cp /usr/local/opt/dnsmasq/dnsmasq.conf.example /usr/local/etc/dnsmasq.conf
$&amp;gt; sudo cp -fv /usr/local/opt/dnsmasq/*.plist /Library/LaunchDaemons
$&amp;gt; sudo chown root /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
$&amp;gt; sudo launchctl load /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point you now a have locally running dns server.  Let&amp;rsquo;s go configure it to so that we can browse like we are in a production environment.&lt;/p&gt;

&lt;p&gt;We are going to take this one step further and prepare ourselves for a future post where we work with
** need to do this multiline
sed -i.bak &amp;rsquo;s$#address=\/cowgill.net\/127.0.0.1$address=/cowgill2.net/127.0.0.1$g&amp;rsquo; /tmp/dnsmasq.conf
add to the /usr/local/etc/dnsamsq.conf â€” 2 entries:
address=/docker.dev/127.0.0.1
address=/bspot.dev/127.0.0.1
- configs for bspot.dev&lt;/p&gt;

&lt;h3 id=&#34;resolve-all-the-things:dc0fd55d5e6d99f1b0154c995452f3bf&#34;&gt;Resolve all the things&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;resolvers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dig-it:dc0fd55d5e6d99f1b0154c995452f3bf&#34;&gt;Dig It&lt;/h3&gt;

&lt;p&gt;how to test with dig&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>